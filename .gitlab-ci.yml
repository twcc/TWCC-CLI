.sonar_template: &sonarqube_temp
    stage: analysis
    image: ciricihq/gitlab-sonar-scanner       

stages:
    - analysis
    - test
    - deploy

python39:
  stage: test
  image: python:3.9
  variables:
    TWCC_CICD_STAGE: 'minor'
  script: 
    - python -V
    - echo $_TWCC_API_KEY_, $_TWCC_PROJECT_CODE_, $_TWCC_CLI_GA_
    - echo $TWCC_CICD_STAGE
    - pip install tox
    - export TWCC_SHOW_DEPRECATED=False
    - tox -e py37
  only:
    - merge_requests

python37:
  stage: test
  image: python:3.7
  variables:
    TWCC_CICD_STAGE: 'minor'
  script: 
    - python -V
    - echo $_TWCC_API_KEY_, $_TWCC_PROJECT_CODE_, $_TWCC_CLI_GA_
    - echo $TWCC_CICD_STAGE
    - pip install tox
    - export TWCC_SHOW_DEPRECATED=False
    - tox -e py37
  only:
    - dev

python36:
  stage: test
  image: python:3.6
  variables:
    TWCC_CICD_STAGE: 'MAJOR'
  script: 
    - python -V
    - echo $_TWCC_API_KEY_, $_TWCC_PROJECT_CODE_, $_TWCC_CLI_GA_
    - echo "REMOVE __TWCC_CLI_STAGE__ VALUE"
    - sed -i 's/__TWCC_CLI_STAGE__ = "."/__TWCC_CLI_STAGE__ = ""/g'  twccli/version.py
    - grep '__TWCC_CLI_STAGE__ =' twccli/version.py
    - pip install tox
    - tox -e py36
  only:
    - master

sonarqube-reports:
    <<: *sonarqube_temp
    variables:
        SONAR_URL: $SONAR_HOST_URL
        SONAR_ANALYSIS_MODE: publish
        SONAR_BRANCH: $CI_COMMIT_BRANCH
        GIT_DEPTH: 0
    script:
        - gitlab-sonar-scanner -Dsonar.branch.name=$CI_COMMIT_REF_NAME
    # only:
    #   - dev

sonar-preview:
  <<: *sonarqube_temp
  variables:
    SONAR_ANALYSIS_MODE: issues
    SONAR_URL: $SONAR_HOST_URL
    SONAR_BRANCH: $CI_COMMIT_BRANCH
    GIT_DEPTH: 0
  except:
    - master
  script:
    - apk add git
    - git config --global user.email "leo.chen@twsc.io"
    - git config --global user.name "Leo Chen"
    - git checkout dev
    - git merge $CI_COMMIT_SHA --no-commit --no-ff
    - gitlab-sonar-scanner \
      -Dsonar.analysis.mode=preview \
      -Dsonar.host.url=$SONAR_URL \
      -Dsonar.login=$SONAR_TOKEN \
      -Dsonar.gitlab.project_id=$CI_PROJECT_ID \
      -Dsonar.gitlab.commit_sha=$CI_COMMIT_SHA \
      -Dsonar.gitlab.ref_name=$CI_COMMIT_REF_NAME \
      -Dsonar.branch.name=$CI_COMMIT_REF_NAME


manual MAJOR version:
  stage: deploy
  image: python:3.9
  variables:
    TWINE_USERNAME: $PYPI_USERNAME
    TWINE_PASSWORD: $PYPI_PASSWORD
  script:
    - echo "REMOVE __TWCC_CLI_STAGE__ VALUE"
    - sed -i 's/__TWCC_CLI_STAGE__ = "."/__TWCC_CLI_STAGE__ = ""/g'  twccli/version.py
    - grep '__TWCC_CLI_STAGE__ =' twccli/version.py
    - pip install twine
    - python setup.py sdist bdist_wheel
    - twine upload --verbose dist/*
  only:
    - master
  when: manual
  allow_failure: false

manual deploy to GITHUB:
  stage: deploy
  image: python:3.9
  script:
    - git clone https://$GITHUB_USRERNAME:$GITHUB_APIKEY@github.com/twcc/TWCC-CLI 
    - cd TWCC-CLI/
    - git remote add upstream $CI_REPOSITORY_URL
    - git fetch upstream
    - git config --global user.email "August.Chao@twsc.io"
    - git config --global user.name $GITHUB_USRERNAME
    - git merge upstream/$CI_COMMIT_REF_NAME --no-commit --no-ff --allow-unrelated-histories
    - export TWCC_CLI_VER="`python ../twccli/version.py`"
    - git checkout -b $TWCC_CLI_VER
    - git commit . -m "-- Release $TWCC_CLI_VER --"
    - git push --set-upstream origin $TWCC_CLI_VER
    - apt-key adv --keyserver keyserver.ubuntu.com --recv-key C99B11DEB97541F0
    - apt update && apt install -y software-properties-common
    - apt-add-repository https://cli.github.com/packages
    - apt update && apt install -y gh
    - bash scripts/get_latest_release_note.sh > /tmp/release_note_tmp
    - export GITHUB_TOKEN=$GITHUB_APIKEY
    - /usr/bin/gh pr create --title "v$TWCC_CLI_VER" --body-file /tmp/release_note_tmp
    - /usr/bin/gh release create "$TWCC_CLI_VER" --title "v$TWCC_CLI_VER" --notes-file /tmp/release_note_tmp
  only:
    - 347-test-cd-flow-to-github
  when: manual
  allow_failure: false
